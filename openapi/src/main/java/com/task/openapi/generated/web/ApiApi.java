/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.task.openapi.generated.web;

import com.task.openapi.generated.model.CreatedResponse;
import com.task.openapi.generated.model.DrugCreateRequest;
import com.task.openapi.generated.model.DrugResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.annotation.Generated;
import javax.validation.Valid;
import java.util.UUID;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-01-13T22:12:47.351285600+04:00[Asia/Yerevan]")
@Validated
@Tag(name = "api", description = "the api API")
public interface ApiApi {

    default ApiApiDelegate getDelegate() {
        return new ApiApiDelegate() {};
    }

    /**
     * GET /api/drugs/{drugId}
     *
     * @param drugId Identification of entity record. (required)
     * @return Successful operation (status code 200)
     */
    @Operation(
        operationId = "apiDrugsDrugIdGet",
        tags = { "drug" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DrugResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/drugs/{drugId}",
        produces = { "application/json" }
    )
    default ResponseEntity<DrugResponse> apiDrugsDrugIdGet(
        @Parameter(name = "drugId", description = "Identification of entity record.", required = true) @PathVariable("drugId") UUID drugId
    ) {
        return getDelegate().apiDrugsDrugIdGet(drugId);
    }


    /**
     * POST /api/drugs
     *
     * @param drugCreateRequest Create a new drug in the system (optional)
     * @return Successful operation (status code 200)
     */
    @Operation(
        operationId = "apiDrugsPost",
        tags = { "drug" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreatedResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/drugs",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<CreatedResponse> apiDrugsPost(
        @Parameter(name = "DrugCreateRequest", description = "Create a new drug in the system") @Valid @RequestBody(required = false) DrugCreateRequest drugCreateRequest
    ) {
        return getDelegate().apiDrugsPost(drugCreateRequest);
    }

}
